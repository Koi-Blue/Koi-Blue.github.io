<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Koi_Blue</title><link>https://Koi-Blue.github.io</link><description>无限进步</description><copyright>Koi_Blue</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://avatars.githubusercontent.com/u/182211636?v=4</url><title>avatar</title><link>https://Koi-Blue.github.io</link></image><lastBuildDate>Sun, 24 Nov 2024 06:51:52 +0000</lastBuildDate><managingEditor>Koi_Blue</managingEditor><ttl>60</ttl><webMaster>Koi_Blue</webMaster><item><title>垃圾分类等的目标检测开发建议（本文面向处于准备阶段的同学）</title><link>https://Koi-Blue.github.io/post/la-ji-fen-lei-deng-de-mu-biao-jian-ce-kai-fa-jian-yi-%EF%BC%88-ben-wen-mian-xiang-chu-yu-zhun-bei-jie-duan-de-tong-xue-%EF%BC%89.html</link><description># 基于计算机视觉的智能垃圾分类项目软硬件采购及实施指南&#13;
&#13;
---&#13;
&#13;
[![image.png](https://i.postimg.cc/GhwnwgtV/image.png)](https://postimg.cc/fkKrYKxf)&#13;
&#13;
## 硬件方案选择&#13;
&#13;
### 1. 树莓派&#13;
树莓派是该项目开发的常用选择，其提供了较强的计算性能，能够满足智能垃圾分类项目的基本需求。</description><guid isPermaLink="true">https://Koi-Blue.github.io/post/la-ji-fen-lei-deng-de-mu-biao-jian-ce-kai-fa-jian-yi-%EF%BC%88-ben-wen-mian-xiang-chu-yu-zhun-bei-jie-duan-de-tong-xue-%EF%BC%89.html</guid><pubDate>Sat, 23 Nov 2024 13:18:15 +0000</pubDate></item><item><title>Java 突击纲</title><link>https://Koi-Blue.github.io/post/Java%20-tu-ji-gang.html</link><description>&#13;
# 第一章&#13;
&#13;
## Java的特点&#13;
- **跨平台性**：基于Java虚拟机（JVM），一次编写，到处运行。</description><guid isPermaLink="true">https://Koi-Blue.github.io/post/Java%20-tu-ji-gang.html</guid><pubDate>Tue, 19 Nov 2024 08:52:03 +0000</pubDate></item><item><title>数据库系统概论突击纲</title><link>https://Koi-Blue.github.io/post/shu-ju-ku-xi-tong-gai-lun-tu-ji-gang.html</link><description>&gt; 单选题10题10分&#13;
&gt; 判断题10题10分&#13;
&gt; 填空题10空10分（有难题，不会可空）&#13;
&gt; 简答题2个 10/20 概念＋举例约6行&#13;
&gt; 应用题3个题多问，一题中每问5或6分&#13;
&gt; 三、六和七章占比较大&#13;
&#13;
---&#13;
# 第一章&#13;
&#13;
## 1.2.7 关系模型与其他区别&#13;
$\qquad$ 关系模型建立在严格的**数学概念**的基础上，从用户的观点看，**关系模型由一组关系组成**；每个关系的数据结构是一张规范化的二维表；&#13;
**关系：** 一个关系对应通常说的一张表；&#13;
**关系模式：** 对关系的描述，一般表示为&#13;
&#13;
-	关系名 （属性1， 属性2， ...，属性n）&#13;
&#13;
**例如**&#13;
&#13;
-	学生（学号， 姓名， 年龄， 性别， 系名， 年级）&#13;
&#13;
**关系模型**	&#13;
&#13;
1. 要求关系必须是规范化的，关系必须满足一定的规范条件，关系的每一个分量必须是一个不可分的数据项；&#13;
2. 关系模型的数据操纵主要包括查询、插入、删除和更新数据；这些操作必须满足关系的完整性约束条件；&#13;
3. 关系模型中的数据操作是集合操作，操作对象和操作结果都是关系；&#13;
4. 关系模型把存取路径向用户隐蔽起来，用户只要指出“干什么”或“找什么”， 不必详细说明“怎么干”或“怎么找”。</description><guid isPermaLink="true">https://Koi-Blue.github.io/post/shu-ju-ku-xi-tong-gai-lun-tu-ji-gang.html</guid><pubDate>Tue, 19 Nov 2024 06:15:09 +0000</pubDate></item><item><title>OpenCV第三阶段 -- 原理简述（待续）</title><link>https://Koi-Blue.github.io/post/OpenCV-di-san-jie-duan-%20--%20-yuan-li-jian-shu-%EF%BC%88-dai-xu-%EF%BC%89.html</link><description># 第三阶段：中级图像处理&#13;
&#13;
## 1. 图像滤波&#13;
&#13;
### 数学原理及意义&#13;
&#13;
#### 1.1 平滑滤波&#13;
平滑滤波是一种常见的图像处理技术，用于去除噪声并改善图像质量。</description><guid isPermaLink="true">https://Koi-Blue.github.io/post/OpenCV-di-san-jie-duan-%20--%20-yuan-li-jian-shu-%EF%BC%88-dai-xu-%EF%BC%89.html</guid><pubDate>Sun, 17 Nov 2024 11:20:39 +0000</pubDate></item><item><title>OpenCV第三阶段</title><link>https://Koi-Blue.github.io/post/OpenCV-di-san-jie-duan.html</link><description># 第三阶段：中级图像处理&#13;
&#13;
## 1. 图像滤波&#13;
&#13;
### 目标：&#13;
- 学会使用 ` OpenCV ` 进行图像滤波。</description><guid isPermaLink="true">https://Koi-Blue.github.io/post/OpenCV-di-san-jie-duan.html</guid><pubDate>Sat, 09 Nov 2024 13:18:57 +0000</pubDate></item><item><title>OpenCV第二阶段</title><link>https://Koi-Blue.github.io/post/OpenCV-di-er-jie-duan.html</link><description># 第二阶段：OpenCV 基础&#13;
&#13;
## 1. OpenCV 安装与配置&#13;
&#13;
### 目标：&#13;
- 学会在Linux上安装和配置OpenCV。</description><guid isPermaLink="true">https://Koi-Blue.github.io/post/OpenCV-di-er-jie-duan.html</guid><pubDate>Thu, 07 Nov 2024 05:33:30 +0000</pubDate></item><item><title>适用的OpenCV学习路线</title><link>https://Koi-Blue.github.io/post/shi-yong-de-OpenCV-xue-xi-lu-xian.html</link><description># 计算机视觉学习路线&#13;
&#13;
## 第一阶段：基础知识准备&#13;
&#13;
### 1. Linux 基础&#13;
- **目标**：熟悉Linux操作系统的基本命令和文件系统操作。</description><guid isPermaLink="true">https://Koi-Blue.github.io/post/shi-yong-de-OpenCV-xue-xi-lu-xian.html</guid><pubDate>Thu, 07 Nov 2024 04:59:41 +0000</pubDate></item><item><title>OpenCV -- first project</title><link>https://Koi-Blue.github.io/post/OpenCV%20--%20first%20project.html</link><description>&gt; 声明：仅作为今天交流内容参考&#13;
## 0 构建CMakeLists.txt文件&#13;
- 先声明 cmake 版本及项目名称&#13;
- 查找OpenCV包&#13;
``` CMakeLists.txt&#13;
find_package(OpenCV REQUIRED)&#13;
```&#13;
- 包含OpenCV头文件&#13;
```&#13;
include_directories(${OpenCV_INCLUDE_DIRS})&#13;
```&#13;
- 添加可执行文件&#13;
- 链接OpenCV库&#13;
```&#13;
target_link_libraries(ImageToGray ${OpenCV_LIBS})&#13;
```&#13;
&#13;
## 1 主要功能的C++实现&#13;
### 1.1 导入opencv头文件&#13;
``` cpp&#13;
#include &lt;opencv2/opencv.hpp&gt;&#13;
```&#13;
### 1.2 主函数&#13;
``` cpp&#13;
int main(int argc, char** argv) &#13;
```&#13;
- ``` main ``` 函数是C++程序的入口点。</description><guid isPermaLink="true">https://Koi-Blue.github.io/post/OpenCV%20--%20first%20project.html</guid><pubDate>Wed, 06 Nov 2024 14:56:54 +0000</pubDate></item><item><title>Rust __ Embedded：Arduino篇（一）——环境配置</title><link>https://Koi-Blue.github.io/post/Rust%20__%20Embedded%EF%BC%9AArduino-pian-%EF%BC%88-yi-%EF%BC%89%E2%80%94%E2%80%94-huan-jing-pei-zhi.html</link><description># 前言&#13;
&amp;ensp;&amp;ensp;&amp;ensp;&amp;ensp;近日在浅学Rust语言，发现Rust语言完美符合小内存嵌入式的需求：&#13;
* &amp;ensp;速度快&#13;
* &amp;ensp;内存手动处理，可以人为解决内存溢出的问题&#13;
&#13;
&amp;ensp;&amp;ensp;&amp;ensp;&amp;ensp;正好可以解决前段时间的最大痛点，不妨启动Rust-Embedded尝试尝试。</description><guid isPermaLink="true">https://Koi-Blue.github.io/post/Rust%20__%20Embedded%EF%BC%9AArduino-pian-%EF%BC%88-yi-%EF%BC%89%E2%80%94%E2%80%94-huan-jing-pei-zhi.html</guid><pubDate>Thu, 26 Sep 2024 10:16:57 +0000</pubDate></item><item><title>基于计算机视觉的起重机--控制与视觉部分（含代码）（未完结）</title><link>https://Koi-Blue.github.io/post/ji-yu-ji-suan-ji-shi-jue-de-qi-zhong-ji----kong-zhi-yu-shi-jue-bu-fen-%EF%BC%88-han-dai-ma-%EF%BC%89%EF%BC%88-wei-wan-jie-%EF%BC%89.html</link><description># 0 写在前面&#13;
&amp;nbsp;&#13;
&amp;ensp;&amp;ensp;&amp;ensp;&amp;ensp;找到适应自己的工作节奏以及合作伙伴将是高效完成项目的前提。</description><guid isPermaLink="true">https://Koi-Blue.github.io/post/ji-yu-ji-suan-ji-shi-jue-de-qi-zhong-ji----kong-zhi-yu-shi-jue-bu-fen-%EF%BC%88-han-dai-ma-%EF%BC%89%EF%BC%88-wei-wan-jie-%EF%BC%89.html</guid><pubDate>Fri, 20 Sep 2024 12:42:27 +0000</pubDate></item><item><title>: &gt;</title><link>https://Koi-Blue.github.io/post/-%20-.html</link><description>: &gt;。</description><guid isPermaLink="true">https://Koi-Blue.github.io/post/-%20-.html</guid><pubDate>Fri, 20 Sep 2024 08:55:18 +0000</pubDate></item></channel></rss>
<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Koi_Blue</title><link>https://Koi-Blue.github.io</link><description>:&gt;</description><copyright>Koi_Blue</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://avatars.githubusercontent.com/u/182211636?v=4</url><title>avatar</title><link>https://Koi-Blue.github.io</link></image><lastBuildDate>Mon, 31 Mar 2025 05:02:38 +0000</lastBuildDate><managingEditor>Koi_Blue</managingEditor><ttl>60</ttl><webMaster>Koi_Blue</webMaster><item><title>game</title><link>https://Koi-Blue.github.io/post/game.html</link><description>&gt; [!NOTE]
&gt; 诸多bug慢慢修

&gt; [!Caution]
&gt; 认真工作哦

&gt; 注：
&gt; 代码copy后修改后缀即食；急转弯有bug，有概率会死掉

&gt; 还有一件事：
&gt; 默认方向向右，小心撞墙

``` html
&lt;!DOCTYPE html&gt;
&lt;html lang='en'&gt;
&lt;head&gt;
    &lt;meta charset='UTF-8'&gt;
    &lt;title&gt;pusipusi&lt;/title&gt;
    &lt;style&gt;
        body {
            display: flex;
            flex-direction: column;
            align-items: center;
            background-color: #f0f0f0;
            font-family: Arial, sans-serif;
        }
        #gameCanvas {
            border: 2px solid #333;
            background-color: #fff;
        }
        .controls {
            margin: 20px 0;
            display: flex;
            gap: 20px;
        }
        button {
            padding: 10px 20px;
            font-size: 16px;
            cursor: pointer;
            background-color: #4CAF50;
            color: white;
            border: none;
            border-radius: 5px;
        }
        button:hover {
            background-color: #45a049;
        }
        #difficulty {
            padding: 8px;
            font-size: 16px;
        }
        .info {
            margin: 10px 0;
            font-size: 18px;
        }
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;h1&gt;工作累了，吃个蛇蛇&lt;/h1&gt;
    &lt;div class='controls'&gt;
        &lt;select id='difficulty'&gt;
            &lt;option value='easy'&gt;Eeeasy&lt;/option&gt;
            &lt;option value='normal' selected&gt;Normal&lt;/option&gt;
            &lt;option value='hard'&gt;Diiiificult&lt;/option&gt;
        &lt;/select&gt;
        &lt;button onclick='startGame()'&gt;start game&lt;/button&gt;
    &lt;/div&gt;
    &lt;div class='info'&gt;
        得分: &lt;span id='score'&gt;0&lt;/span&gt; | 
        难度: &lt;span id='currentDifficulty'&gt;Normal&lt;/span&gt;
    &lt;/div&gt;
    &lt;canvas id='gameCanvas' width='400' height='400'&gt;&lt;/canvas&gt;

    &lt;script&gt;
        const canvas = document.getElementById('gameCanvas');
        const ctx = canvas.getContext('2d');
        const gridSize = 20;
        const tileCount = canvas.width / gridSize;
        
        let snake = [];
        let food = {};
        let dx = 1;  // 默认初始方向哦
        let dy = 0;  //配合dx修改四个默认初始方向
        let score = 0;
        let gameLoop;
        let speed = 150;
        
        const difficultySettings = {
            easy: { speed: 200, color: '#4CAF50' },
            normal: { speed: 150, color: '#FF9800' },
            hard: { speed: 100, color: '#F44336' }
        };

        function startGame() {
            clearInterval(gameLoop);
            snake = [{x: 10, y: 10}];
            score = 0;
            dx = 1;  // 初始方向
            dy = 0;
            document.getElementById('score').textContent = score;
            
            const difficulty = document.getElementById('difficulty').value;
            speed = difficultySettings[difficulty].speed;
            document.getElementById('currentDifficulty').textContent = 
                document.getElementById('difficulty').options[document.getElementById('difficulty').selectedIndex].text;
            
            generateFood();
            gameLoop = setInterval(update, speed);
        }

        function generateFood() {
            food = {
                x: Math.floor(Math.random() * tileCount),
                y: Math.floor(Math.random() * tileCount)
            };
            for (let segment of snake) {
                if (segment.x === food.x &amp;&amp; segment.y === food.y) {
                    generateFood();
                }
            }
        }

        function update() {
            const head = {x: snake[0].x + dx, y: snake[0].y + dy};
            
            // 在边界吗
            if (head.x &lt; 0 || head.x &gt;= tileCount || head.y &lt; 0 || head.y &gt;= tileCount) {
                gameOver();
                return;
            }
            
            // 自碰了吗
            for (let segment of snake) {
                if (head.x === segment.x &amp;&amp; head.y === segment.y) {
                    gameOver();
                    return;
                }
            }
            
            snake.unshift(head);
            
            // 吃食物logic
            if (head.x === food.x &amp;&amp; head.y === food.y) {
                score += 10;
                document.getElementById('score').textContent = score;
                generateFood();
            } else {
                snake.pop();
            }
            
            draw();
        }

        function draw() {
            ctx.fillStyle = '#fff';
            ctx.fillRect(0, 0, canvas.width, canvas.height);
            
            // 蛇蛇
            const difficulty = document.getElementById('difficulty').value;
            ctx.fillStyle = difficultySettings[difficulty].color;
            for (let segment of snake) {
                ctx.fillRect(segment.x * gridSize, segment.y * gridSize, gridSize-2, gridSize-2);
            }
            
            // 果果
            ctx.fillStyle = '#FF0000';
            ctx.fillRect(food.x * gridSize, food.y * gridSize, gridSize-2, gridSize-2);
        }

        function gameOver() {
            clearInterval(gameLoop);
            alert(`游戏结束咯，得分: ${score}`);
        }

        // 方向控制
        document.addEventListener('keydown', (e) =&gt; {
            switch(e.key) {
                case 'ArrowUp':
                    if (dy === 0) { dx = 0; dy = -1; }
                    break;
                case 'ArrowDown':
                    if (dy === 0) { dx = 0; dy = 1; }
                    break;
                case 'ArrowLeft':
                    if (dx === 0) { dx = -1; dy = 0; }
                    break;
                case 'ArrowRight':
                    if (dx === 0) { dx = 1; dy = 0; }
                    break;
            }
        });
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;
```。</description><guid isPermaLink="true">https://Koi-Blue.github.io/post/game.html</guid><pubDate>Sun, 30 Mar 2025 17:40:28 +0000</pubDate></item><item><title>十日---存本小说解解乏&lt;189-214&gt;</title><link>https://Koi-Blue.github.io/post/shi-ri-----cun-ben-xiao-shuo-jie-jie-fa--189-214-.html</link><description>第189章 横扫六合
　　乔家劲面如死灰。</description><guid isPermaLink="true">https://Koi-Blue.github.io/post/shi-ri-----cun-ben-xiao-shuo-jie-jie-fa--189-214-.html</guid><pubDate>Sun, 30 Mar 2025 17:11:20 +0000</pubDate></item><item><title>十日---存本小说解解乏&lt;162-188&gt;</title><link>https://Koi-Blue.github.io/post/shi-ri-----cun-ben-xiao-shuo-jie-jie-fa--162-188-.html</link><description>第162章 兵器牌
　　“没必要打招呼。</description><guid isPermaLink="true">https://Koi-Blue.github.io/post/shi-ri-----cun-ben-xiao-shuo-jie-jie-fa--162-188-.html</guid><pubDate>Sun, 30 Mar 2025 17:10:23 +0000</pubDate></item><item><title>十日---存本小说解解乏&lt;136-161&gt;</title><link>https://Koi-Blue.github.io/post/shi-ri-----cun-ben-xiao-shuo-jie-jie-fa--136-161-.html</link><description>第136章 漂浮
　　“我可以不走这条道。</description><guid isPermaLink="true">https://Koi-Blue.github.io/post/shi-ri-----cun-ben-xiao-shuo-jie-jie-fa--136-161-.html</guid><pubDate>Sun, 30 Mar 2025 17:09:28 +0000</pubDate></item><item><title>十日---存本小说解解乏&lt;109-135&gt;</title><link>https://Koi-Blue.github.io/post/shi-ri-----cun-ben-xiao-shuo-jie-jie-fa--109-135-.html</link><description>第109章 熟人
　　还不等乔家劲反应，那个坚硬如山的男人便狠狠的撞在他的小腹上，然后双手一抱，将他不断向后推去。</description><guid isPermaLink="true">https://Koi-Blue.github.io/post/shi-ri-----cun-ben-xiao-shuo-jie-jie-fa--109-135-.html</guid><pubDate>Sun, 30 Mar 2025 17:08:08 +0000</pubDate></item><item><title>十日---存本小说解解乏&lt;81-108&gt;</title><link>https://Koi-Blue.github.io/post/shi-ri-----cun-ben-xiao-shuo-jie-jie-fa--81-108-.html</link><description>第81章 放弃？
　　痛。</description><guid isPermaLink="true">https://Koi-Blue.github.io/post/shi-ri-----cun-ben-xiao-shuo-jie-jie-fa--81-108-.html</guid><pubDate>Sun, 30 Mar 2025 17:06:54 +0000</pubDate></item><item><title>十日---存本小说解解乏&lt;54-80&gt;</title><link>https://Koi-Blue.github.io/post/shi-ri-----cun-ben-xiao-shuo-jie-jie-fa--54-80-.html</link><description>第54章 乱世男女
　　二人抱着一口老旧的铝锅，不断在城市中穿行。</description><guid isPermaLink="true">https://Koi-Blue.github.io/post/shi-ri-----cun-ben-xiao-shuo-jie-jie-fa--54-80-.html</guid><pubDate>Sun, 30 Mar 2025 17:05:53 +0000</pubDate></item><item><title>十日---存本小说解解乏&lt;27-53&gt;</title><link>https://Koi-Blue.github.io/post/shi-ri-----cun-ben-xiao-shuo-jie-jie-fa--27-53-.html</link><description>第27章 愚蠢
　　“齐夏。</description><guid isPermaLink="true">https://Koi-Blue.github.io/post/shi-ri-----cun-ben-xiao-shuo-jie-jie-fa--27-53-.html</guid><pubDate>Sun, 30 Mar 2025 17:04:34 +0000</pubDate></item><item><title>十日---存本小说解解乏&lt;1-26&gt;</title><link>https://Koi-Blue.github.io/post/shi-ri-----cun-ben-xiao-shuo-jie-jie-fa--1-26-.html</link><description>第1章 空屋
　　一个老旧的钨丝灯被黑色的电线悬在屋子中央，闪烁着昏暗的光芒。</description><guid isPermaLink="true">https://Koi-Blue.github.io/post/shi-ri-----cun-ben-xiao-shuo-jie-jie-fa--1-26-.html</guid><pubDate>Sun, 30 Mar 2025 17:03:27 +0000</pubDate></item><item><title>垃圾分类等的目标检测开发建议（本文面向处于准备阶段的同学）</title><link>https://Koi-Blue.github.io/post/la-ji-fen-lei-deng-de-mu-biao-jian-ce-kai-fa-jian-yi-%EF%BC%88-ben-wen-mian-xiang-chu-yu-zhun-bei-jie-duan-de-tong-xue-%EF%BC%89.html</link><description># 基于计算机视觉的智能垃圾分类项目软硬件采购及实施指南&#13;
&#13;
[![image.png](https://i.postimg.cc/GhwnwgtV/image.png)](https://postimg.cc/fkKrYKxf)&#13;
&#13;
---&#13;
&#13;
## 硬件方案选择&#13;
&#13;
### 1. 树莓派&#13;
树莓派是该项目开发的常用选择，其提供了较强的计算性能，能够满足智能垃圾分类项目的基本需求。</description><guid isPermaLink="true">https://Koi-Blue.github.io/post/la-ji-fen-lei-deng-de-mu-biao-jian-ce-kai-fa-jian-yi-%EF%BC%88-ben-wen-mian-xiang-chu-yu-zhun-bei-jie-duan-de-tong-xue-%EF%BC%89.html</guid><pubDate>Sat, 23 Nov 2024 13:18:15 +0000</pubDate></item><item><title>OpenCV第三阶段 -- 原理简述（待续）</title><link>https://Koi-Blue.github.io/post/OpenCV-di-san-jie-duan-%20--%20-yuan-li-jian-shu-%EF%BC%88-dai-xu-%EF%BC%89.html</link><description># 第三阶段：中级图像处理&#13;
&#13;
## 1. 图像滤波&#13;
&#13;
### 数学原理及意义&#13;
&#13;
#### 1.1 平滑滤波&#13;
平滑滤波是一种常见的图像处理技术，用于去除噪声并改善图像质量。</description><guid isPermaLink="true">https://Koi-Blue.github.io/post/OpenCV-di-san-jie-duan-%20--%20-yuan-li-jian-shu-%EF%BC%88-dai-xu-%EF%BC%89.html</guid><pubDate>Sun, 17 Nov 2024 11:20:39 +0000</pubDate></item><item><title>OpenCV第三阶段</title><link>https://Koi-Blue.github.io/post/OpenCV-di-san-jie-duan.html</link><description># 第三阶段：中级图像处理&#13;
&#13;
## 1. 图像滤波&#13;
&#13;
### 目标：&#13;
- 学会使用 ` OpenCV ` 进行图像滤波。</description><guid isPermaLink="true">https://Koi-Blue.github.io/post/OpenCV-di-san-jie-duan.html</guid><pubDate>Sat, 09 Nov 2024 13:18:57 +0000</pubDate></item><item><title>OpenCV第二阶段</title><link>https://Koi-Blue.github.io/post/OpenCV-di-er-jie-duan.html</link><description># 第二阶段：OpenCV 基础&#13;
&#13;
## 1. OpenCV 安装与配置&#13;
&#13;
### 目标：&#13;
- 学会在Linux上安装和配置OpenCV。</description><guid isPermaLink="true">https://Koi-Blue.github.io/post/OpenCV-di-er-jie-duan.html</guid><pubDate>Thu, 07 Nov 2024 05:33:30 +0000</pubDate></item><item><title>适用的OpenCV学习路线</title><link>https://Koi-Blue.github.io/post/shi-yong-de-OpenCV-xue-xi-lu-xian.html</link><description># 计算机视觉学习路线&#13;
&#13;
## 第一阶段：基础知识准备&#13;
&#13;
### 1. Linux 基础&#13;
- **目标**：熟悉Linux操作系统的基本命令和文件系统操作。</description><guid isPermaLink="true">https://Koi-Blue.github.io/post/shi-yong-de-OpenCV-xue-xi-lu-xian.html</guid><pubDate>Thu, 07 Nov 2024 04:59:41 +0000</pubDate></item><item><title>OpenCV -- first project</title><link>https://Koi-Blue.github.io/post/OpenCV%20--%20first%20project.html</link><description>&gt; 声明：仅作为今天交流内容参考&#13;
## 0 构建CMakeLists.txt文件&#13;
- 先声明 cmake 版本及项目名称&#13;
- 查找OpenCV包&#13;
``` CMakeLists.txt&#13;
find_package(OpenCV REQUIRED)&#13;
```&#13;
- 包含OpenCV头文件&#13;
```&#13;
include_directories(${OpenCV_INCLUDE_DIRS})&#13;
```&#13;
- 添加可执行文件&#13;
- 链接OpenCV库&#13;
```&#13;
target_link_libraries(ImageToGray ${OpenCV_LIBS})&#13;
```&#13;
&#13;
## 1 主要功能的C++实现&#13;
### 1.1 导入opencv头文件&#13;
``` cpp&#13;
#include &lt;opencv2/opencv.hpp&gt;&#13;
```&#13;
### 1.2 主函数&#13;
``` cpp&#13;
int main(int argc, char** argv) &#13;
```&#13;
- ``` main ``` 函数是C++程序的入口点。</description><guid isPermaLink="true">https://Koi-Blue.github.io/post/OpenCV%20--%20first%20project.html</guid><pubDate>Wed, 06 Nov 2024 14:56:54 +0000</pubDate></item><item><title>Rust __ Embedded：Arduino篇（一）——环境配置</title><link>https://Koi-Blue.github.io/post/Rust%20__%20Embedded%EF%BC%9AArduino-pian-%EF%BC%88-yi-%EF%BC%89%E2%80%94%E2%80%94-huan-jing-pei-zhi.html</link><description># 前言&#13;
&amp;ensp;&amp;ensp;&amp;ensp;&amp;ensp;近日在浅学Rust语言，发现Rust语言完美符合小内存嵌入式的需求：&#13;
* &amp;ensp;速度快&#13;
* &amp;ensp;内存手动处理，可以人为解决内存溢出的问题&#13;
&#13;
&amp;ensp;&amp;ensp;&amp;ensp;&amp;ensp;正好可以解决前段时间的最大痛点，不妨启动Rust-Embedded尝试尝试。</description><guid isPermaLink="true">https://Koi-Blue.github.io/post/Rust%20__%20Embedded%EF%BC%9AArduino-pian-%EF%BC%88-yi-%EF%BC%89%E2%80%94%E2%80%94-huan-jing-pei-zhi.html</guid><pubDate>Thu, 26 Sep 2024 10:16:57 +0000</pubDate></item><item><title>基于计算机视觉的起重机--控制与视觉部分（含代码）（未完结）</title><link>https://Koi-Blue.github.io/post/ji-yu-ji-suan-ji-shi-jue-de-qi-zhong-ji----kong-zhi-yu-shi-jue-bu-fen-%EF%BC%88-han-dai-ma-%EF%BC%89%EF%BC%88-wei-wan-jie-%EF%BC%89.html</link><description># 0 写在前面&#13;
&amp;nbsp;&#13;
&amp;ensp;&amp;ensp;&amp;ensp;&amp;ensp;找到适应自己的工作节奏以及合作伙伴将是高效完成项目的前提。</description><guid isPermaLink="true">https://Koi-Blue.github.io/post/ji-yu-ji-suan-ji-shi-jue-de-qi-zhong-ji----kong-zhi-yu-shi-jue-bu-fen-%EF%BC%88-han-dai-ma-%EF%BC%89%EF%BC%88-wei-wan-jie-%EF%BC%89.html</guid><pubDate>Fri, 20 Sep 2024 12:42:27 +0000</pubDate></item><item><title>: &gt;</title><link>https://Koi-Blue.github.io/post/-%20-.html</link><description>: &gt;。</description><guid isPermaLink="true">https://Koi-Blue.github.io/post/-%20-.html</guid><pubDate>Fri, 20 Sep 2024 08:55:18 +0000</pubDate></item></channel></rss>